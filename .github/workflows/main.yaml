name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-webp-lib:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, macos-13]
        include:
          - os: ubuntu-latest
            platform: unix
            arch: amd64
            install_tools_command: sudo apt-get update && sudo apt-get install gcc make autoconf automake libtool
          - os: macos-13
            platform: mac
            arch: x86_64
            install_tools_command: brew install make autoconf automake libtool
          - os: macos-latest
            platform: mac
            arch: aarch64
            install_tools_command: brew install make autoconf automake libtool
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: 'Install OS specific tools'
        run: ${{ matrix.install_tools_command }}
      - name: 'Build WebP lib'
        working-directory: ./submodules/libwebp
        run: |
          ./autogen.sh
          ./configure \
          --disable-static \
          --disable-png \
          --disable-jpeg \
          --disable-tiff \
          --disable-gif \
          --disable-wic \
          --disable-libwebpdecoder \
          --disable-libwebpextras \
          --disable-libwebpmux \
          --disable-libwebpdemux \
          --disable-sdl \
          --prefix=${{ github.workspace }}/webp_compiled
          make
          make install
      - uses: actions/upload-artifact@v4
        name: 'Upload WebP libs'
        with:
          name: webp-imageio_${{ matrix.platform }}_${{ matrix.arch }}
          path: ${{ github.workspace }}/webp_compiled/lib
  package-jar:
    runs-on: ubuntu-latest
    needs: build-webp-lib
    environment: release
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: 'Set up latest JDK code tool jextract'
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: jextract
      - name: Generate WebP JAVA FF classes
        run: |
          jextract --output src/main/java -t io.github.nkolosnjaji.webp.gen \
            --header-class-name LibWebP \
            --include-function WebPGetEncoderVersion \
            --include-function WebPConfigLosslessPreset \
            --include-function WebPConfigInitInternal \
            --include-function WebPValidateConfig \
            --include-function WebPMemoryWrite \
            --include-function WebPMemoryWriterInit \
            --include-function WebPMemoryWriterClear \
            --include-function WebPPictureImportBGR \
            --include-function WebPPictureImportBGRA \
            --include-function WebPPictureInitInternal \
            --include-function WebPPictureRescale \
            --include-function WebPPictureCrop \
            --include-function WebPPictureFree \
            --include-function WebPPictureView \
            --include-function WebPPictureRescale \
            --include-function WebPEncode \
            --include-function WebPInitDecoderConfigInternal \
            --include-function WebPGetInfo \
            --include-function WebPGetFeaturesInternal \
            --include-function WebPDecode \
            --include-function WebPFreeDecBuffer \
            --include-struct WebPDecoderConfig \
            --include-struct WebPConfig \
            --include-struct WebPMemoryWriter \
            --include-struct WebPPicture \
            --include-struct WebPBitstreamFeatures \
            --include-struct WebPDecBuffer \
            --include-struct WebPDecoderOptions \
            --include-struct WebPRGBABuffer \
            --include-struct WebPYUVABuffer \
            --include-typedef WebPWriterFunction \
            --include-constant WEBP_ENCODER_ABI_VERSION \
            --include-constant VP8_ENC_ERROR_BAD_DIMENSION \
            --include-constant VP8_ENC_ERROR_BAD_WRITE \
            --include-constant VP8_ENC_ERROR_BITSTREAM_OUT_OF_MEMORY \
            --include-constant VP8_ENC_ERROR_FILE_TOO_BIG \
            --include-constant VP8_ENC_ERROR_INVALID_CONFIGURATION \
            --include-constant VP8_ENC_ERROR_LAST \
            --include-constant VP8_ENC_ERROR_NULL_PARAMETER \
            --include-constant VP8_ENC_ERROR_OUT_OF_MEMORY \
            --include-constant VP8_ENC_ERROR_PARTITION_OVERFLOW \
            --include-constant VP8_ENC_ERROR_PARTITION0_OVERFLOW \
            --include-constant VP8_ENC_ERROR_USER_ABORT \
            --include-constant VP8_ENC_OK \
            --include-constant WEBP_PRESET_DEFAULT \
            --include-constant WEBP_PRESET_DRAWING \
            --include-constant WEBP_PRESET_ICON \
            --include-constant WEBP_PRESET_PHOTO \
            --include-constant WEBP_PRESET_PICTURE \
            --include-constant WEBP_PRESET_TEXT \
            --include-constant WEBP_DECODER_ABI_VERSION \
            --include-constant VP8_STATUS_BITSTREAM_ERROR \
            --include-constant VP8_STATUS_INVALID_PARAM \
            --include-constant VP8_STATUS_NOT_ENOUGH_DATA \
            --include-constant VP8_STATUS_OK \
            --include-constant VP8_STATUS_OUT_OF_MEMORY \
            --include-constant VP8_STATUS_SUSPENDED \
            --include-constant VP8_STATUS_UNSUPPORTED_FEATURE \
            --include-constant VP8_STATUS_USER_ABORT \
            --include-constant MODE_RGB \
            --include-constant MODE_RGBA \
            --include-constant WEBP_HINT_DEFAULT \
            --include-constant WEBP_HINT_GRAPH \
            --include-constant WEBP_HINT_LAST \
            --include-constant WEBP_HINT_PHOTO \
            --include-constant WEBP_HINT_PICTURE \
            --include-constant WEBP_MAX_DIMENSION \
            ${{ github.workspace }}/submodules/libwebp/src/webp/encode.h \
            ${{ github.workspace }}/submodules/libwebp/src/webp/decode.h
      - uses: actions/download-artifact@v4
        name: 'Download WebP libs - unix_amd64'
        with:
          name: webp-imageio_unix_amd64
          path: ${{ github.workspace }}/webp_lib/unix_amd64
      - uses: actions/download-artifact@v4
        name: 'Download WebP libs - mac_x86_64'
        with:
          name: webp-imageio_mac_x86_64
          path: ${{ github.workspace }}/webp_lib/mac_x86_64
      - uses: actions/download-artifact@v4
        name: 'Download WebP libs - mac_aarch64'
        with:
          name: webp-imageio_mac_aarch64
          path: ${{ github.workspace }}/webp_lib/mac_aarch64
      - name: 'Copy resources to libs folder'
        run: |
          mkdir -p ${{ github.workspace }}/libs/unix_amd64/io/github/nkolosnjaji/webp/unix/amd64
          cp ${{ github.workspace }}/webp_lib/unix_amd64/libsharpyuv.so ${{ github.workspace }}/libs/unix_amd64/io/github/nkolosnjaji/webp/unix/amd64
          cp ${{ github.workspace }}/webp_lib/unix_amd64/libwebp.so ${{ github.workspace }}/libs/unix_amd64/io/github/nkolosnjaji/webp/unix/amd64
          mkdir -p ${{ github.workspace }}/libs/mac_x86_64/io/github/nkolosnjaji/webp/mac/x86_64
          cp ${{ github.workspace }}/webp_lib/mac_x86_64/libsharpyuv.dylib ${{ github.workspace }}/libs/mac_x86_64/io/github/nkolosnjaji/webp/mac/x86_64
          cp ${{ github.workspace }}/webp_lib/mac_x86_64/libwebp.dylib ${{ github.workspace }}/libs/mac_x86_64/io/github/nkolosnjaji/webp/mac/x86_64
          mkdir -p ${{ github.workspace }}/libs/mac_aarch64/io/github/nkolosnjaji/webp/mac/aarch64
          cp ${{ github.workspace }}/webp_lib/mac_aarch64/libsharpyuv.dylib ${{ github.workspace }}/libs/mac_aarch64/io/github/nkolosnjaji/webp/mac/aarch64
          cp ${{ github.workspace }}/webp_lib/mac_aarch64/libwebp.dylib ${{ github.workspace }}/libs/mac_aarch64/io/github/nkolosnjaji/webp/mac/aarch64
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: 'Publish to GitHub Packages'
        run: mvn --batch-mode --no-transfer-progress clean deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSWORD }}
      - uses: actions/upload-artifact@v4
        name: 'Upload Target - debug'
        with:
          name: target
          path: ${{ github.workspace }}/target
